@model IEnumerable<TaskA.Models.BookTool>

@{
    ViewBag.Title = "ReturnTool";
}

<h2>Return Tools</h2>
<hr />
<br />
<div class="row">
    @foreach (var item in Model)
    {
        TaskA.Models.ApplicationDbContext db = new TaskA.Models.ApplicationDbContext();

        var findPerson = (from i in db.ToolSets
                          where i.Tool_ID == item.Tool_ID
                          select i.ServiceCat_ID).SingleOrDefault();

        var description = (from i in db.Services
                           where i.ServiceCat_ID == findPerson
                           select i.Service_Description).SingleOrDefault();
   

            <div class="col-md-3">
                <div class="container">
                    <div class="card" style="width:250px">
                        @if (item.ToolSet.ToolImage != null)
                        {
                            var base64 = Convert.ToBase64String(item.ToolSet.ToolImage);
                            var ImgSource = string.Format("data:image/gif;base64,{0}", base64);
                            <img src="@ImgSource"alt="Card image" width="250" height="250"/>

                        }
                        @if (Model != null && !String.IsNullOrEmpty(item.ToolSet.QRCodeImagePath))
                        {
                        <center>
                            <img src="@Url.Content(item.ToolSet.QRCodeImagePath)" alt="Image" height="250" width="250" />
                        </center>
                        }
                        <div class="card-body">
                            <p class="card-text">@Html.DisplayFor(modelItem => item.ToolSet.Tool_SetName)</p>
                            <p class="card-text">@Html.DisplayFor(modelItem => description)</p>
                        </div>
                    </div>
                </div>
            </div>

    }
</div>
<br />