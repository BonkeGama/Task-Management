@model TaskA.Models.ToolSet

@{
    ViewBag.Title = "Create";
}

<h2>Add New Tool</h2>


@using (Html.BeginForm("Create", "ToolSets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.ToolImage, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-3">
            <div>
                <input type="file" id="filelist" name="filelist" />
            </div>
            @Html.ValidationMessageFor(model => model.ToolImage, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Tool_SetName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Tool_SetName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tool_SetName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.ServiceCat_ID, "ServiceCat_ID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("ServiceCat_ID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ServiceCat_ID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Add this Tool" class="btn btn-success" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("All Tools", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
