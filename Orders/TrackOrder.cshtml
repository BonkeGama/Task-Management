@model IEnumerable<TaskA.Models.Order>
@{
    ViewBag.Title = "TrackOrder";
}
<h2>Track Your Tasker Progress</h2>
<style type="text/css">
    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }

    .circle {
        background: lightblue;
        border-radius: 50%;
        width: 100px;
        height: 100px;
    }
</style>

@using (Html.BeginForm())
{
    <p>
        Find by reference number: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
<br />
<br />
<br />
@foreach (var item in Model)
{
    <div class="row">
        <div class="stepwizard">
            <div class="stepwizard-row">

                <div class="stepwizard-step">
                    @if (item.OrderStatus.Status_Name.ToLower().Contains("Waiting To assign the Tasker to driver".ToLower()))
                    {

                        <button type="button" class="btn btn-success btn-circle">1</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-default btn-circle">1</button>
                    }
                <p>Waiting To assign the Tasker to driver</p>
                </div>
                <div class="stepwizard-step">
                    @if (item.OrderStatus.Status_Name.ToLower().Contains("Arrived for service rendering".ToLower()))
                    {
                        <button type="button" class="btn btn-success btn-circle">2</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger btn-circle">2</button>
                    }
                <p>Arrived for service rendering</p>
                </div>
                @*<div class="stepwizard-step">
                    @if (item.OrderStatus.Status_Name.ToLower().Contains("In Progress".ToLower()))
                    {
                        <button type="button" class="btn btn-success btn-circle">3</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger btn-circle">3</button>
                    }
                <p>In Progress</p>
                </div>
                <div class="stepwizard-step">
                    @if (item.OrderStatus.Status_Name.ToLower().Contains("Finished Service rendering".ToLower()))
                    {
                        <button type="button" class="btn btn-success btn-circle">4</button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-danger btn-circle">4</button>
                    }
                <p>Finished Service rendering</p>
                </div>*@
            </div>
        </div>
    </div>
}
<br />
